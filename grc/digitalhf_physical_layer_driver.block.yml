# auto-generated by grc.converter

id: digitalhf_physical_layer_driver
label: physical_layer_driver
category: '[digitalhf]'

parameters:
-   id: description_name
    label: Description
    dtype: string
-   id: samp_rate
    label: sample rate
    dtype: int
-   id: sps
    label: SPS
    dtype: int
-   id: nB
    label: nB
    dtype: int
-   id: nF
    label: nF
    dtype: int
-   id: nW
    label: nW
    dtype: int
-   id: mu
    label: mu
    dtype: float
-   id: alpha
    label: alpha
    dtype: float
-   id: mode
    label: mode
    dtype: string

inputs:
-   domain: stream
    dtype: complex

outputs:
-   label: out_symb
    domain: stream
    dtype: complex
-   label: out_cc
    domain: stream
    dtype: complex
-   domain: message
    id: soft_dec
    optional: true
-   domain: message
    id: bits
    optional: true
-   label: taps
    domain: stream
    dtype: complex
    vlen: ${ (1+sps*(nB+nF)) }
    optional: true

templates:
    imports: import digitalhf
    make: digitalhf.physical_layer_driver(${samp_rate}, ${sps}, ${alpha}, ${mu}, ${nB},
        ${nF}, ${nW}, ${description_name}, ${mode})
    callbacks:
    - set_mu(${mu})
    - set_alpha(${alpha})
    - set_mode(${mode})

file_format: 1
