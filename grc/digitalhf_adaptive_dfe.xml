<?xml version="1.0"?>
<block>
  <name>adaptive_dfe</name>
  <key>digitalhf_adaptive_dfe</key>
  <category>[digitalhf]</category>
  <import>import digitalhf</import>
  <make>digitalhf.adaptive_dfe($sps,$nB,$nF,$nW,$mu,$alpha,$py_obj_name)</make>
  <callback>set_mu($mu)</callback>
  <callback>set_mode($mode)</callback>
  <!-- Make one 'param' node for every Parameter you want settable from the GUI.
       Sub-nodes:
       * name
       * key (makes the value accessible as $keyname, e.g. in the make node)
       * type -->
  <param>
    <name>SPS</name>
    <key>sps</key>
    <type>int</type>
  </param>
  <param>
    <name>nB</name>
    <key>nB</key>
    <type>int</type>
  </param>
  <param>
    <name>nF</name>
    <key>nF</key>
    <type>int</type>
  </param>
  <param>
    <name>nW</name>
    <key>nW</key>
    <type>int</type>
  </param>
  <param>
    <name>mu</name>
    <key>mu</key>
    <type>float</type>
  </param>
  <param>
    <name>alpha</name>
    <key>alpha</key>
    <type>float</type>
  </param>
  <param>
    <name>py_obj_name</name>
    <key>py_obj_name</key>
    <type>string</type>
  </param>
  <param>
    <name>mode</name>
    <key>mode</key>
    <type>string</type>
  </param>

  <!-- Make one 'sink' node per input. Sub-nodes:
       * name (an identifier for the GUI)
       * type
       * vlen
       * optional (set to 1 for optional inputs) -->
  <sink>
    <name>in</name>
    <type>complex</type>
  </sink>

  <!-- Make one 'source' node per output. Sub-nodes:
       * name (an identifier for the GUI)
       * type
       * vlen
       * optional (set to 1 for optional inputs) -->
  <source>
    <name>out</name>
    <type>complex</type>
     <!-- byte, short, xxx_vector -->
  </source>
</block>
